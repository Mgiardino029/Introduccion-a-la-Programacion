program {

}

   /*
    
    consignas:

    cada celula representa una celda :
    bolita verde celula viva
    bolita ninguna verde celula muerta
    celula vecina en lindantes y diagonales

    ------------------------------------------------------------------------------------------------------------------------------------------

    * Es viva si tiene al menos 2 vecinas vivas escasez
 
    * Si tiene mas de 3 vecinas vivas,muere sobre
    
    * Toda celula viva con 2 o 3 vecinas viva pasa a la siguiente generacion

    * Toda celula viva con exactamente 3 vecinas vivas se convierte en celula viva 

    ------------------------------------------------------------------------------------------------------------------------------------------

    Ejercicio   1) Escribir la función esCélulaViva(), que indica si la célula en la celda actual está viva o no.               // retorna
    
    Ejercicio   2) Escribir la función nroDeVecinasVivas() que describe el número de células vivas que son vecinas de
                la célula actual.                                                                                               // acumulacion entre vecinas
    
    Ejercicio   3) Escribir PrepararCélulaActual(), que aplique las pautas de juego a la célula actual.                         // transformacion
    
    Ejercicio   4) Escribir CompletarElPróximoTick(), que lee todas las marcas de eliminación/reanimación de
                células y las procesa (es decir, efectivamente elimina/reanima esas células). El resultado será un nuevo universo, en
                condiciones de poder evolucionar en un tick subsiguiente.
    
    Ejercicio   5) Escribir Simular_Ticks(cantidad), que dada una cantidad, simula esa cantidad de ticks sobre el
    
    ------------------------------------------------------------------------------------------------------------------------------------------

    */



function esCelulaViva() {
    /*
    proposito: indica si la celula actual esta viva o no
    precondiciones:
    tipo: Booleana
    Observaciones: la celula actual esta viva si tiene una bolita Verde
    */

    return(hayBolitas(Verde) && not esCelulaPorMorir())

}

function esCelulaPorMorir() {
    /*
    proposito: indica si la celula va a morir por sobrepoblacion o escases de poblacion                                // si son menos de 2 o mas de 3 muere
    precondiciones: tiene menos de 2 o mas de 3 vecinas vivas
    tipo: Booleano
    observaciones: 
    */

    return()



}


function nroDeVecinasVivas() {
    /*
    proposito:
    precondiciones:
    tipo:
    Observaciones:
    */
}


