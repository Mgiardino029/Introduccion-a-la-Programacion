program {


    


}



type DiaDeLaSemana is variant {

    /*
    proposito: declara los dias de la semana
    */


    case Lunes{}
    case Martes{}
    case Miercoles{}
    case Jueves{}
    case Viernes{}
    case Sabado{}
    case Domingo{}
    



}

// 1.- A)


function diaSiguiente_(dia) {
    /*
    proposito: describe el dia siguiente al dia "dia"
    precondiciones: ninguna
    parametros: dia : DiaDeLaSemana
    Tipo: DiaDeLaSemana
    observaciones:
    */

    return(choose Lunes when (dia == Domingo)
        Martes when (dia == Lunes)
        Miercoles when (dia == Martes)
        Jueves when (dia == Miercoles)
        Viernes when (dia == Jueves)
        Sabado when (dia == Viernes)
        Domingo when (dia == Sabado))

    
}   


// 1.- B)


function diaPrevio_(dia) {
    /*
    proposito: describe el dia previo al dia "dia"
    precondicion: ninguna
    parametros: dia : DiaDeLaSemana
    tipo: DiaDeLaSemana
    observaciones:
    */


    return( choose Domingo when (dia == Lunes)
        Lunes when (dia == Martes)
        Martes when (dia == Miercoles)
        Miercoles when (dia == Jueves)
        Jueves when (dia == Viernes)
        Viernes when (dia == Sabado)
        Sabado when (dia == Domingo)            )
}



// 1.- C)



function esDiaDeFinDeSemana_(dia) {
    /*
    proposito: indica si el dia dado es un dia de fin de semana
    precondiciones: ninguna
    parametros: 
    dia: DiaDeLaSemana
    tipo: Bolleano
    Observacion: un dia de fin de semana es Sabado o Domingo
    */

    return( dia == Sabado || dia == Domingo)

}

/* Reflexion: el parametro dado en cada funcion es del tipo "dia", las funciones no pueden utilizarse para solucionar este problema ya q es una alternativa condicional. los beneficios
    que traen diaSiguiente y diaPrevio es que podes llamar es q sabiendo en q dia estas te retorna el dia anterior o el siguiente */


